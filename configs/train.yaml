compile: true # PyTorch 2.0 optimization
device: gpu # Training device (cpu/gpu)
precision: "bf16-mixed" # Enable mixed precision (no/fp16/bf16/fp8)
seed: 42 # Project seed
flash_attention: false  # Enable Flash Attention

checkpoint_path: "" # Project checkpoint directory (to resume training)
pretrained_path: "" # Path to pretrained model weights (to do transfer learning)
pretrained_t5_compat: false  # Load weights from a T5 model with different vocab size
mode: 'train'

data: # Data settings
  dataset_type: 'mmrs'   # Dataset type (ors/mmrs)
  train_dataset_path: "/net/beliveau/vol1/home/vkchau/493g1/trainset"
  test_dataset_path: "/net/beliveau/vol1/home/vkchau/493g1/testset"
  train_dataset_start: 0 # Training dataset start index
  train_dataset_end: 3000000 # Training dataset end index
  test_dataset_start: 0 # Testing/validation dataset start index
  test_dataset_end: 3000000 # Testing/validation dataset end index
  num_classes: 2 # Number of label classes in the dataset

  src_seq_len: 1024
  tgt_seq_len: 2048
  sample_rate: ${..model.spectrogram.sample_rate}
  hop_length: ${..model.spectrogram.hop_length}
  cycle_length: 16
  per_track: true # Loads all beatmaps in a track sequentially which optimizes audio data loading
  only_last_beatmap: false  # Only use the last beatmap in the mapset
  center_pad_decoder: false            # Center pad decoder input
  num_diff_classes: 24  # Number of difficulty classes
  max_diff: 12          # Maximum difficulty of difficulty classes
  # num_cs_classes: 21     # Number of circle size classes
  class_dropout_prob: 0.2
  diff_dropout_prob: 0.2
  mapper_dropout_prob: 0.2
  cs_dropout_prob: 0.2
  year_dropout_prob: 0.2
  hold_note_ratio_dropout_prob: 0.2
  scroll_speed_ratio_dropout_prob: 0.2
  descriptor_dropout_prob: 0.2
  add_gamemode_token: false
  add_diff_token: true
  add_style_token: false
  add_mapper_token: false
  add_cs_token: false
  add_year_token: false
  add_hitsounded_token: false  # Add token for whether the map has hitsounds
  add_song_length_token: false  # Add token for the length of the song
  add_song_position_token: false  # Add token for the position of the song in the mapset
  add_descriptors: false
  add_empty_sequences: true
  add_empty_sequences_at_step: -1
  add_pre_tokens: false
  add_pre_tokens_at_step: -1
  max_pre_token_len: -1
  timing_random_offset: 0
  add_gd_context: false  # Prefix the decoder with tokens of another beatmap in the mapset
  min_difficulty: 0 # Minimum difficulty to consider including in the dataset
  sample_weights_path: ''    # Path to sample weights
  rhythm_weight: 3.0    # Weight of rhythm tokens in the loss calculation
  lookback: 0             # Fraction of audio sequence to fill with tokens from previous inference window
  lookahead: 0            # Fraction of audio sequence to skip at the end of the audio window
  # context_types:      # List of context types to include in the dataset
  #   - "in": []
  #     "out": ['${context_type:map}']
  # context_weights: []    # List of weights for each context type. Determines how often each context type is sampled
  context_types:       # List of context types to include in the dataset
    # - "in": ['${context_type:timing}', '${context_type:kiai}', '${context_type:map}', '${context_type:sv}']
    #   "out": ['${context_type:none}']
    - "in": ['${context_type:none}']
      "out": ['${context_type:timing}', '${context_type:kiai}', '${context_type:map}', '${context_type:sv}']
    - "in": ['${context_type:no_hs}']
      "out": ['${context_type:timing}', '${context_type:kiai}', '${context_type:map}', '${context_type:sv}']
    - "in": ['${context_type:gd}']
      "out": ['${context_type:timing}', '${context_type:kiai}', '${context_type:map}', '${context_type:sv}']
  context_weights: [4, 1, 1]    # List of weights for each context type. Determines how often each context type is sampled
  descriptors_path: ''   # Path to file with all beatmap descriptors
  mappers_path: "" # Path to file with all beatmap mappers
  add_timing: true # Model beatmap timing
  add_out_context_types: true  # Add tokens indicating types of the out context
  add_snapping: true # Model hit object snapping
  add_timing_points: false # Model beatmap timing with timing points
  add_hitsounds: true # Model beatmap hitsounds
  add_distances: false # Model hit object distances
  add_positions: true # Model hit object coordinates
  position_precision: 1 # Precision of hit object coordinates
  position_split_axes: true # Split hit object X and Y coordinates into separate tokens
  position_range: [-256, 768, -256, 640] # Range of hit object coordinates
  dt_augment_prob: 0.7 # Probability of augmenting the dataset with DT
  dt_augment_range: [1.25, 1.5] # Range of DT augmentation
  types_first: true # Put the type token at the start of the group before the timeshift token
  # augment_flip: false # Augment the dataset with flipped positions
  add_kiai: false        # Add kiai times to map context
  gamemodes: [0]  # List of gamemodes to include in the dataset
  mania_bpm_normalized_scroll_speed: false  # Normalize mania scroll speed by BPM
  add_sv_special_token: false  # Add extra special token for current SV
  add_sv: false  # Model slider velocity in std and ctb
  add_mania_sv: false  # Add mania scroll velocity in map context
dataloader: # Dataloader settings
  num_workers: 2

optim: # Optimizer settings
  name: adamw
  base_lr: 1e-3 # Should be scaled with the number of devices present
  batch_size: 128 # This is the batch size per GPU
  total_steps: 50000
  warmup_steps: 0
  lr_scheduler: cosine
  weight_decay: 0.0
  grad_clip: 1.0
  grad_acc: 8
  final_cosine: 1e-5

eval: # Evaluation settings
  every_steps: 25
  steps: 500

checkpoint: # Checkpoint settings
  every_steps: 100

logging: # Logging settings
  log_with: "wandb" # Logging service (wandb/tensorboard)
  every_steps: 1
  grad_l2: true
  weights_l2: true
  mode: "online"

profile: # Profiling settings
  do_profile: false
  early_stop: false
  wait: 8
  warmup: 8
  active: 8
  repeat: 1

hydra:
  job:
    chdir: True
  run:
    dir: ./logs/${now:%Y-%m-%d}/${now:%H-%M-%S}
